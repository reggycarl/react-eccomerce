{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/react/react-eccomerce/src/ShoppingCart.jsx\";\nimport React, { Component } from \"react\";\nimport Product from \"./Product\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ShoppingCart extends Component {\n  constructor() {}\n\n  render() {\n    // passing information from parent to child class using props \n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"shopping cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: this.state.products.map(prod => {\n          return /*#__PURE__*/_jsxDEV(Product, {\n            id: prod.id,\n            productName: prod.productName,\n            price: prod.price,\n            quantity: prod.quantity,\n            product: prod,\n            photo: prod.photo,\n            onincrement: this.handleincrement,\n            ondecrement: this.handledecrement,\n            onDelete: this.handledelete,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              children: \"Buy Now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 16\n            }, this)\n          }, prod.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  } // getting all products then updating the state with a js method\n\n\n}","map":{"version":3,"sources":["/Users/mac/Desktop/react/react-eccomerce/src/ShoppingCart.jsx"],"names":["React","Component","Product","ShoppingCart","constructor","render","state","products","map","prod","id","productName","price","quantity","photo","handleincrement","handledecrement","handledelete"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,eAAe,MAAMC,YAAN,SAA2BF,SAA3B,CAAoC;AAChDG,EAAAA,WAAW,GAAE,CAEZ;;AAEJC,EAAAA,MAAM,GAAE;AACJ;AACA,wBAAO;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,eAIH;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACC,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,GAApB,CAAyBC,IAAD,IAAS;AAC9B,8BAAO,QAAC,OAAD;AAAuB,YAAA,EAAE,EAAEA,IAAI,CAACC,EAAhC;AAAoC,YAAA,WAAW,EAAED,IAAI,CAACE,WAAtD;AACP,YAAA,KAAK,EAAEF,IAAI,CAACG,KADL;AACY,YAAA,QAAQ,EAAEH,IAAI,CAACI,QAD3B;AACqC,YAAA,OAAO,EAAEJ,IAD9C;AACoD,YAAA,KAAK,EAAEA,IAAI,CAACK,KADhE;AAEP,YAAA,WAAW,EAAE,KAAKC,eAFX;AAE4B,YAAA,WAAW,EAAE,KAAKC,eAF9C;AAGP,YAAA,QAAQ,EAAG,KAAKC,YAHT;AAAA,mCAIJ;AAAQ,cAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJI,aAAeR,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,kBAAP;AAMH,SAPA;AADD;AAAA;AAAA;AAAA;AAAA,cAJG;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAeH,GAtBkD,CAwBnD;;;AAxBmD","sourcesContent":["import React,{Component} from \"react\";\nimport Product from \"./Product\";\n\nexport default class ShoppingCart extends Component{\n   constructor(){\n       \n   }\n    \nrender(){\n    // passing information from parent to child class using props \n    return <div className=\"container-fluid\">\n        <h4>\n            shopping cart\n        </h4>\n        <div className=\"row\">\n        {this.state.products.map((prod) =>{\n            return <Product key ={prod.id}id={prod.id} productName={prod.productName} \n            price={prod.price} quantity={prod.quantity} product={prod} photo={prod.photo}\n            onincrement={this.handleincrement} ondecrement={this.handledecrement} \n            onDelete ={this.handledelete}>\n               <button className=\"btn btn-primary\">Buy Now</button>\n            </Product>\n        })}\n        </div>\n    </div>\n}\n\n// getting all products then updating the state with a js method\nhandleincrement =(product,maxValue) =>{\n    let allPorduct =[...this.state.products]\n    let index= allPorduct.indexOf(product)\n    \n//updating the state of the component by using setstate \nif(allPorduct[index].quantity < maxValue){\n    allPorduct[index].quantity++\n    this.setState({products:allPorduct})\n}\n   \n    \n   \n    console.log(allPorduct[index])\n    }\n// getting all products then updating the state with a js method\nhandledelete =(product) =>{\n    let allPorduct =[...this.state.products]\n    let index= allPorduct.indexOf(product)\n    if(window.confirm(\"Are you sure you want to delete\")){\n        allPorduct.splice(index, 1)\n        this.setState({products: allPorduct})\n\n\n    }\n    // delete product using index\n     //updating the state of the component by using setstate\n\n\n}\n\nhandledecrement =(product,minValue) =>{\n    \n    let allPorduct =[...this.state.products]\n    let index= allPorduct.indexOf(product)\n //updating the state of the component by using setstate\n if(allPorduct[index].quantity > minValue){\n    allPorduct[index].quantity--\n    this.setState({products: allPorduct})\n }\n    \n     \n    console.log(\"handleIncrement\",product,index)\n    \n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}